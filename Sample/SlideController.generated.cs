// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Sample.Controllers
{
    public partial class SlideController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SlideController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SlideController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SlideController Actions { get { return MVC.Slide; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Slide";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Slide";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Json = "Json";
            public readonly string Jsonp = "Jsonp";
            public readonly string Cors = "Cors";
            public readonly string ContentType = "ContentType";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Json = "Json";
            public const string Jsonp = "Jsonp";
            public const string Cors = "Cors";
            public const string ContentType = "ContentType";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string index = "index";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Conclusion = "Conclusion";
                public readonly string FeatureToggling = "FeatureToggling";
                public readonly string HttpCaching = "HttpCaching";
                public readonly string InitialRequest = "InitialRequest";
                public readonly string Introduction = "Introduction";
                public readonly string Jsonp = "Jsonp";
                public readonly string MediaTypes = "MediaTypes";
                public readonly string ResourceDescription = "ResourceDescription";
                public readonly string ResourceRelationships = "ResourceRelationships";
                public readonly string UriTemplates = "UriTemplates";
            }
            public readonly string Conclusion = "~/Views/Slide/Conclusion.cshtml";
            public readonly string FeatureToggling = "~/Views/Slide/FeatureToggling.cshtml";
            public readonly string HttpCaching = "~/Views/Slide/HttpCaching.cshtml";
            public readonly string InitialRequest = "~/Views/Slide/InitialRequest.cshtml";
            public readonly string Introduction = "~/Views/Slide/Introduction.cshtml";
            public readonly string Jsonp = "~/Views/Slide/Jsonp.cshtml";
            public readonly string MediaTypes = "~/Views/Slide/MediaTypes.cshtml";
            public readonly string ResourceDescription = "~/Views/Slide/ResourceDescription.cshtml";
            public readonly string ResourceRelationships = "~/Views/Slide/ResourceRelationships.cshtml";
            public readonly string UriTemplates = "~/Views/Slide/UriTemplates.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_SlideController : Sample.Controllers.SlideController
    {
        public T4MVC_SlideController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index(string index)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "index", index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Json()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Json);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Jsonp()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Jsonp);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Cors()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Cors);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ContentType()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ContentType);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
